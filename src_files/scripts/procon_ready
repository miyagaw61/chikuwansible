#!/usr/bin/env python3
from enert import *
import os

home = os.environ['HOME']

rs_files, _ = Shell("ls -1 ./src/bin/*.rs").readlines()

for rs_file in rs_files:
    Shell('cp -a ' + home + '/bin/procon_template.rs ' + rs_file).call()

#Shell('echo "1.15.1" > rust-toolchain').call()
dependencies_line_nr = Shell("cat Cargo.toml | rg -n '\[dependencies\]' | rg '^[0-9]+' -o").read()

f = File('Cargo.toml')
f_new = File('Cargo.toml.new')
lines = f.readlines()
for line in lines:
    if line[:10] == 'edition = ':
        continue
    f_new.add(line + '\n')
    if line == '[dependencies]':
        f_new.add('renert = { git = \"https://github.com/miyagaw61/renert" }\n')
Shell('mv Cargo.toml.new Cargo.toml').call()

f_makefile = File('Makefile')
f_makefile.rm()

for rs_file in rs_files:
    rs_id = rs_file[10]
    f_makefile.add(rs_id + ':\n')
    f_makefile.add('\tcargo test --bin ' + rs_id + ' -- --test-threads=1\n')
    f_makefile.add(rs_id + 'd:\n')
    f_makefile.add('\trust-gdb ./target/debug/' + rs_id + ' -x gdbrc_' + rs_id + '.py\n')
    f_makefile.add(rs_id + 'b:\n')
    f_makefile.add('\tRUST_BACKTRACE=1 cargo test --bin ' + rs_id + ' -- --test-threads=1\n')
    f_makefile.add(rs_id + 'r:\n')
    f_makefile.add('\tcargo run --bin ' + rs_id + ' --release\n')
    f_makefile.add(rs_id + 'rb:\n')
    f_makefile.add('\tRUST_BACKTRACE=1 cargo run --bin ' + rs_id + '\n')

    f_gdbrc = File('src/gdbrc_' + rs_id + '.py')
    f_gdbrc.rm()
    f_gdbrc.add('e = Exgdb()\n')
    f_gdbrc.add('c = ExgdbCmd()\n')
    f_gdbrc.add('c.b(\'{}::main\')\n'.format(rs_file))
    f_gdbrc.add('gdb.execute(\'run\')\n')
    f_gdbrc.add('gdb.execute(\'layout src\')\n')
